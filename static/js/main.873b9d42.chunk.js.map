{"version":3,"sources":["styles/img/arrow.svg","components/LocationDetails.js","components/ForecastSummary.js","components/ForecastSummaries.js","components/WindDetails.js","components/ForecastDetails.js","components/SearchForm.js","requests/getForecast.js","components/App.js","index.js"],"names":["module","exports","LocationDetails","city","country","errorMessage","className","ForecastSummary","props","date","temperature","description","icon","onSelect","onClick","data-testid","moment","format","name","iconId","max","type","id","ForecastSummaries","forecasts","onForecastSelect","map","forecast","key","toString","defaultProps","PropTypes","arrayOf","shape","min","WindDetails","speed","direction","map1","Map","forEach","a","i","set","rotationStyle","get","speedString","alt","src","arrow","style","transform","ForecastDetails","humidity","wind","SearchForm","handleCitySearch","handleCityInput","onChange","getForecast","setSelectedDate","setForecasts","setLocation","setErrorMessage","endpoint","axios","then","response","data","location","catch","error","errMsg","status","App","useState","selectedDate","citySearch","setCitySearch","cityInput","setCityInput","useEffect","setTimeout","selectedForecast","find","e","preventDefault","target","parentElement","firstChild","value","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.873b9d42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.784874df.svg\";","import \"../styles/LocationDetails.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LocationDetails = ({ city, country, errorMessage }) => {\n  return (\n    <div>\n      <h1 className=\"location-details\">\n        {city}, {country}\n      </h1>\n      <div className=\"error-message\">{errorMessage}</div>\n    </div>\n  );\n};\n\nLocationDetails.propTypes = {\n  city: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n};\n\nexport default LocationDetails;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport \"../styles/ForecastSummary.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WeatherIcon from \"react-icons-weather\";\nimport moment from \"moment\";\n\nconst ForecastSummary = (props) => {\n  const { date, temperature, description, icon, onSelect } = props;\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className=\"forecast-summary\"\n      onClick={() => onSelect(date)}\n      data-testid=\"forecast-summary\"\n    >\n      <div className=\"forecast-summary__date\">\n        {moment(date).format(\"ddd Do MMM\")}\n      </div>\n      <div className=\"forecast-summary__icon\" data-testid=\"forecast-icon\">\n        <WeatherIcon name=\"owm\" iconId={icon} />\n      </div>\n      <div className=\"forecast-summary__temperature\">\n        {temperature.max}&#176;C\n      </div>\n      <div className=\"forecast-summary__description\">{description}</div>\n      <br />\n      <button\n        type=\"button\"\n        onClick={() => onSelect(date)}\n        id=\"test\"\n        className=\"forecast-summary__button\"\n      >\n        DETAILS\n      </button>\n    </div>\n  );\n};\n\nForecastSummary.propTypes = {\n  date: PropTypes.number.isRequired,\n  temperature: PropTypes.shape({\n    min: PropTypes.number,\n    max: PropTypes.number,\n  }).isRequired,\n  description: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default ForecastSummary;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ForecastSummary from \"./ForecastSummary\";\nimport \"../styles/ForecastSummaries.css\";\n\nconst ForecastSummaries = ({ forecasts, onForecastSelect }) => {\n  return (\n    <div className=\"forecast-summaries\">\n      {forecasts.map((forecast) => (\n        <ForecastSummary\n          key={forecast.date}\n          date={forecast.date}\n          temperature={forecast.temperature}\n          description={forecast.description}\n          icon={forecast.icon.toString()}\n          onSelect={onForecastSelect}\n        />\n      ))}\n    </div>\n  );\n};\n\nForecastSummaries.propTypes = {\n  forecasts: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.number,\n      temperature: PropTypes.shape({\n        min: PropTypes.number,\n        max: PropTypes.number,\n      }).isRequired,\n      description: PropTypes.string.isRequired,\n      icon: PropTypes.number.isRequired,\n    })\n  ),\n  onForecastSelect: PropTypes.func.isRequired,\n};\n\nForecastSummaries.defaultProps = {\n  forecasts: PropTypes.arrayOf({\n    date: 0,\n    temperature: PropTypes.shape({\n      min: -60,\n      max: 60,\n    }),\n    description: \"\",\n    icon: 800,\n  }),\n};\nexport default ForecastSummaries;\n","import \"../styles/WindDetails.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport arrow from \"../styles/img/arrow.svg\";\n\nconst WindDetails = ({ speed, direction }) => {\n  const map1 = new Map();\n  [\n    \"n\",\n    \"nne\",\n    \"ne\",\n    \"ene\",\n    \"e\",\n    \"ese\",\n    \"se\",\n    \"sse\",\n    \"s\",\n    \"ssw\",\n    \"sw\",\n    \"wsw\",\n    \"w\",\n    \"wnw\",\n    \"nw\",\n    \"nnw\",\n  ].forEach((a, i) => {\n    map1.set(a, i * 22.5);\n  });\n  const rotationStyle = `rotate(${map1.get(direction)}deg)`;\n  const speedString = `${speed}ms`;\n  return (\n    <div className=\"wind-details\">\n      {speedString}\n      <img\n        className=\"wind-details__img\"\n        data-testid=\"wind-details-image\"\n        alt=\"img\"\n        src={arrow}\n        style={{ transform: rotationStyle }}\n      />\n    </div>\n  );\n};\nWindDetails.propTypes = {\n  speed: PropTypes.number.isRequired,\n  direction: PropTypes.string.isRequired,\n};\n\nexport default WindDetails;\n","import \"../styles/ForecastDetails.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WeatherIcon from \"react-icons-weather\";\nimport moment from \"moment\";\nimport WindDetails from \"./WindDetails\";\n\nconst ForecastDetails = ({ forecast }) => {\n  const { date, icon, temperature, humidity, wind } = forecast;\n  return (\n    <div className=\"forecast-details\">\n      <div className=\"forecast-details__date\">\n        {moment(date).format(\"ddd Do MMM\")}\n      </div>\n      <div className=\"forecast-details-bar\">\n        <div className=\"forecast-details__icon\" data-testid=\"forecast-icon\">\n          <WeatherIcon name=\"owm\" iconId={icon.toString()} />\n        </div>\n        <div\n          className=\"forecast-details__temperature\"\n          data-testid=\"forecast-temperature\"\n        >\n          Max:{temperature.max}&#176;C\n          <br />\n          Min:{temperature.min}&#176;C\n        </div>\n        <div className=\"forecast-details__humidity\">{humidity}%</div>\n        <div\n          className=\"forecast-details__wind\"\n          data-testid=\"forecast-wind-details\"\n        >\n          <WindDetails speed={wind.speed} direction={wind.direction} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nForecastDetails.propTypes = {\n  forecast: PropTypes.shape({\n    date: PropTypes.number,\n    temperature: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n    }).isRequired,\n    icon: PropTypes.number.isRequired,\n    wind: PropTypes.shape({\n      speed: PropTypes.number,\n      direction: PropTypes.string,\n    }).isRequired,\n    humidity: PropTypes.number.isRequired,\n  }),\n};\n\nForecastDetails.defaultProps = {\n  forecast: PropTypes.shape({\n    date: 0,\n    temperature: PropTypes.shape({\n      min: -60,\n      max: 60,\n    }),\n    icon: 800,\n    wind: PropTypes.shape({\n      speed: 0,\n      direction: \"\",\n    }),\n    humidity: 0,\n  }),\n};\n\nexport default ForecastDetails;\n","import \"../styles/SearchForm.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchForm = ({ handleCitySearch, handleCityInput }) => {\n  return (\n    <form className=\"search-form\">\n      <input\n        className=\"search-form__input\"\n        id=\"search-form__input\"\n        type=\"text\"\n        onChange={handleCityInput}\n      />\n      <br />\n      <button\n        type=\"submit\"\n        className=\"search-form__button\"\n        onClick={handleCitySearch}\n      >\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  handleCityInput: PropTypes.func.isRequired,\n  handleCitySearch: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import axios from \"axios\";\n\nconst getForecast = (\n  setSelectedDate,\n  setForecasts,\n  setLocation,\n  city,\n  setErrorMessage\n) => {\n  const endpoint = city\n    ? `https://mcr-codes-weather-app.herokuapp.com/forecast?city=${city}`\n    : \"https://mcr-codes-weather-app.herokuapp.com/forecast\";\n\n  axios\n    .get(endpoint)\n    .then((response) => {\n      setSelectedDate(response.data.forecasts[0].date);\n      setForecasts(response.data.forecasts);\n      setLocation(response.data.location);\n    })\n    .catch((error) => {\n      const errorResponse = error.response;\n      let errMsg = \"ERROR \";\n      if (errorResponse.status === 404) {\n        errMsg += `- \"${city}\" is either outside the UK or does not exist`;\n      } else {\n        errMsg += `- 500 status`;\n      }\n      setErrorMessage(errMsg);\n    });\n};\n\nexport default getForecast;\n","import \"../styles/App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport LocationDetails from \"./LocationDetails\";\nimport ForecastSummaries from \"./ForecastSummaries\";\nimport ForecastDetails from \"./ForecastDetails\";\nimport SearchForm from \"./SearchForm\";\nimport getForecast from \"../requests/getForecast\";\n\nfunction App() {\n  const [forecasts, setForecasts] = useState([]);\n  const [location, setLocation] = useState({ city: \"\", country: \"\" });\n  const [selectedDate, setSelectedDate] = useState(0);\n  const [citySearch, setCitySearch] = useState(\"\");\n  const [cityInput, setCityInput] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    getForecast(\n      setSelectedDate,\n      setForecasts,\n      setLocation,\n      citySearch,\n      setErrorMessage\n    );\n  }, [citySearch]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 5000);\n  }, [errorMessage]);\n\n  const selectedForecast = forecasts.find(\n    (forecast) => forecast.date === selectedDate\n  );\n\n  function handleForecastSelect(date) {\n    setSelectedDate(date);\n  }\n\n  function handleCitySearch(e) {\n    e.preventDefault();\n    e.target.parentElement.firstChild.value = \"\";\n    setCitySearch(cityInput);\n  }\n\n  function handleCityInput(event) {\n    setCityInput(event.target.value);\n  }\n\n  return (\n    <div className=\"weather-app\">\n      <br />\n      <span className=\"weather-app-location-search\">\n        <LocationDetails\n          city={location.city}\n          country={location.country}\n          errorMessage={errorMessage}\n        />\n        <SearchForm\n          handleCitySearch={handleCitySearch}\n          handleCityInput={handleCityInput}\n        />\n      </span>\n      {!errorMessage && (\n        <>\n          {selectedForecast && <ForecastDetails forecast={selectedForecast} />}\n          <ForecastSummaries\n            forecasts={forecasts}\n            onForecastSelect={handleForecastSelect}\n          />\n        </>\n      )}\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}